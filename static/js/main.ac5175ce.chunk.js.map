{"version":3,"sources":["TodoList.js","App.js","reportWebVitals.js","index.js"],"names":["TodoList","props","className","onClick","onSelect","id","text","App","useState","inputList","setInputList","task","setTask","useEffect","storedTodos","JSON","parse","localStorage","getItem","setItem","stringify","deleteTask","console","log","oldTask","filter","element","index","type","placeholder","value","onChange","event","target","map","taskValue","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yOAEaA,EAAW,SAACC,GAGrB,OACI,sBAAKC,UAAU,aAAf,UACI,mBAAGA,UAAU,cAAc,cAAY,OAAOC,QAAS,WACnDF,EAAMG,SAASH,EAAMI,OAEzB,mCAAMJ,EAAMK,KAAZ,WCkDGC,MAvDf,WAEE,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAwBF,mBAAS,IAAjC,mBAAOG,EAAP,KAAaC,EAAb,KAEAC,qBAAU,WACR,IAAMC,EAAcC,KAAKC,MAAMC,aAAaC,QAAQ,SAChDJ,GAAaF,EAAQE,KACxB,IAGHD,qBAAU,WACRI,aAAaE,QAAQ,OAAQJ,KAAKK,UAAUT,MAC3C,CAACA,IAIJ,IAUMU,EAAa,SAAChB,GAClBiB,QAAQC,IAAI,sBACZX,GAAQ,SAACY,GACP,OAAOA,EAAQC,QAAO,SAACC,EAASC,GAC9B,OAAOA,IAAUtB,SAIvB,OACE,mCACE,qBAAKH,UAAU,WAAf,SACE,sBAAKA,UAAU,aAAf,UACE,uBACA,2CACA,uBACA,uBAAO0B,KAAK,OAAOC,YAAY,WAAWC,MAAOrB,EAAWsB,SAzBjD,SAACC,GAClBtB,EAAasB,EAAMC,OAAOH,UAyBpB,wBAAQ3B,QAvBG,WACjBmB,QAAQC,IAAI,eACZX,GAAQ,SAACY,GACP,MAAM,GAAN,mBAAWA,GAAX,CAAoBf,OAEtBC,EAAa,KAkBP,eACA,6BACGC,EAAKuB,KAAI,SAACC,EAAWR,GACpB,OAAO,cAAC,EAAD,CAAsBtB,GAAIsB,EAAOrB,KAAM6B,EAAW/B,SAAUiB,GAA7CM,gBCvCrBS,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.ac5175ce.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport const TodoList = (props) => {\r\n\r\n   \r\n    return (\r\n        <div className=\"todo_style\">\r\n            <i className=\"fa fa-times\" aria-hidden=\"true\" onClick={()=>{\r\n                props.onSelect(props.id);\r\n            }}></i>\r\n            <li> {props.text} </li>\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport { TodoList } from './TodoList';\n\n\nfunction App() {\n\n  const [inputList, setInputList] = useState(\"\");\n  const [task, setTask] = useState([]);\n\n  useEffect(()=>{\n    const storedTodos = JSON.parse(localStorage.getItem(\"task\"))\n    if (storedTodos) setTask(storedTodos)\n  }, [])\n\n  // saving the todos\n  useEffect(()=>{\n    localStorage.setItem(\"task\", JSON.stringify(task))\n  }, [task])\n\n\n\n  const taskEvents = (event) => {\n    setInputList(event.target.value);\n  };\n  const listOfTask = () => {\n    console.log(\"btn clicked\");\n    setTask((oldTask) => {\n      return [...oldTask, inputList];\n    });\n    setInputList(\"\");\n  }\n  const deleteTask = (id) => {\n    console.log(\"delete btn clicked\")\n    setTask((oldTask) => {\n      return oldTask.filter((element, index)=>{\n        return index !== id;\n      });\n    });\n  }\n  return (\n    <>\n      <div className=\"main_div\">\n        <div className=\"center_div\">\n          <br />\n          <h1>ToDo List</h1>\n          <br />\n          <input type=\"text\" placeholder=\"Add Task\" value={inputList} onChange={taskEvents} />\n          <button onClick={listOfTask}>+</button>\n          <ol>\n            {task.map((taskValue, index) => {\n              return <TodoList key={index} id={index} text={taskValue} onSelect={deleteTask} />;\n            })}\n          </ol>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}